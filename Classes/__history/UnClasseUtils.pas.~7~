unit UnClasseUtils;

interface

uses
  SysUtils, xmldoc, XMLIntf, forms;

  function retiraCaractere(caractaere: String; valor: String): String;
  function retiraFormatacaoCPFCNPJ(lCPF_CNPJ: String): String;

implementation

uses SqlExpr, DB;

{  }


function retiraCaractere(caractaere: String; valor: String): String;
var
  i: integer;
begin
  Result := '';
  for i := 1 to Length(valor) do
  begin
    if valor[i] = caractaere then Result := Result
    else Result := Result + valor[i];
  end;
end;

function retiraFormatacaoCPFCNPJ(lCPF_CNPJ: String): String;
var
  i: integer;
begin
  Result := '';
  for i := 1 to Length(lCPF_CNPJ) do
  begin
    if lCPF_CNPJ[i] in ['0','1','2','3','4','5','6','7','8','9'] then
      Result := Result + lCPF_CNPJ[i]
    else
      Result := Result;
  end;
end;

function lerEntradaDoXMLNFE(localDaChaveNoXML, nomeDaChave: String): String;
var
  oArquivoXML_NFE, oNFEConfig: TXMLDocument;
  oNodeNFE, oNodeChave: IXMLNode;
begin
  Result:= '';
  if FileExists(ExtractFilePath(ParamStr(0)) + 'ConfigDownloadXML.xml') then
  begin
    oArquivoXML_NFE:= TXMLDocument.Create(Application);
    oArquivoXML_NFE.Active:= True;
    oArquivoXML_NFE.LoadFromFile(ExtractFilePath(ParamStr(0)) + 'ConfigDownloadXML.xml');

    oNFEConfig:= TXMLDocument.Create(Application);
    with oNFEConfig do
    begin
      oNodeNFE:= oArquivoXML_NFE.DocumentElement.ChildNodes.FindNode('DownloadXML');
      if oNodeNFE <> Nil then
      begin
        oNodeChave:= oNodeNFE.ChildNodes.FindNode(localDaChaveNoXML);
        if oNodeChave <> Nil then
          Result:= oNodeChave.ChildNodes[nomeDaChave].Text;
      end;
    end;
  end;
end;

end.

